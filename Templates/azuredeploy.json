{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serverTypes": {
      "type": "array",
      "defaultValue": [
        "batch",
        "calc",
        "lgcalc",
        "common",
        "download",
        "migr",
        "portal",
        "ras"
      ]
    },
    "appServerHostNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Hostname prefix of app server?  Example: AXPOC"
      }
    },
    "frontendSubnetCIDR": {
      "type": "string",
      "metadata": {
        "description": "CIDR range of FE subnet? (i.e. 172.16.100.0/24)"
      }
    },
    "frontendSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of frontend subnet (Example: FE)?"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Name (must be 1 word no special chars)?"
      }
    },
    "calcServerCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 10,
      "metadata": {
        "description": "How many Calc servers?"
      }
    },
    "lgCalcServerCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 10,
      "metadata": {
        "description": "How many Large Calc servers?"
      }
    },
    "batchServerCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 10,
      "metadata": {
        "description": "How many Batch servers?"
      }
    },
    "downloadServerCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 10,
      "metadata": {
        "description": "How many Download servers?"
      }
    },
    "migrationServerCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 10,
      "metadata": {
        "description": "How many Migration servers?"
      }
    },
    "commonServerCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 10,
      "metadata": {
        "description": "How many Common servers?"
      }
    },
    "rasServerCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 10,
      "metadata": {
        "description": "How many RAS servers?"
      }
    },
    "portalServerCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 10,
      "metadata": {
        "description": "How many Portal servers?"
      }
    },
    "vmAdminUserName": {
      "type": "string",
      "defaultValue": "wkazadmin",
      "minLength": 5,
      "metadata": {
        "description": "VM Admin Username?"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "VM Admin Password (8 Character Minimum)?"
      }
    },
    "appServerStorageAccountsType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 60,
      "minValue": 20,
      "maxValue": 200,
      "metadata": { "description": "Size of Data Disks For App Servers (in GBs)?" }
    },
    "batchVMsSize": {
      "type": "string",
      "defaultValue": "Standard_A6",
      "allowedValues": [
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6"
      ]
    },
    "VMsWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    },
    "domainToJoin": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "domainUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    }
  },
  "variables": {
    "batchFullHostPrefix": "[concat(parameters('appServerHostNamePrefix'),'BATCH')]",
    "calcFullHostPrefix": "[concat(parameters('appServerHostNamePrefix'),'CALC')]",
    "lgCalcFullHostPrefix": "[concat(parameters('appServerHostNamePrefix'),'LGCALC')]",
    "commonFullHostPrefix": "[concat(parameters('appServerHostNamePrefix'),'COMMON')]",
    "downloadFullHostPrefix": "[concat(parameters('appServerHostNamePrefix'),'DOWNLOAD')]",
    "migrationFullHostPrefix": "[concat(parameters('appServerHostNamePrefix'),'MIGR')]",
    "portalFullHostPrefix": "[concat(parameters('appServerHostNamePrefix'),'PORTAL')]",
    "rasFullHostPrefix": "[concat(parameters('appServerHostNamePrefix'),'RAS')]",
    "AxcessPOCFESubnetName": "[parameters('frontendSubnetName')]",
    "AxcessPOCFESubnetCIDR": "[parameters('frontendSubnetCIDR')]",
    "appServerNICsVnetID": "[resourceId('AxcessPOC_VNET', 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "appServerNICsSubnetRef": "[concat(variables('appServerNICsVnetID'), '/subnets/', variables('AxcessPOCFESubnetName'))]",
    "appServerStorageAccountsName": "[concat('appServerStorageAccounts', uniqueString(resourceGroup().id))]",
    "batchVMsVmSize": "[parameters('batchVMsSize')]",
    "prepDataDriveCommand": "Initialize-Disk 2;Start-Sleep -s 2;New-Partition –DiskNumber 2 -UseMaximumSize -DriveLetter Z;Start-Sleep -s 2;Format-Volume –DriveLetter Z –FileSystem NTFS -NewFileSystemLabel DATA -Confirm:$false"
  },
  "resources": [
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), parameters('serverTypes')[copyIndex()]))]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "appServerAvailSets"
      },
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2
      },
      "copy": {
        "count": "[length(parameters('serverTypes'))]",
        "name": "appServerAvailSetsCopy"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), parameters('serverTypes')[copyIndex()]))]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "appServerStorageAccounts"
      },
      "properties": {
        "accountType": "[parameters('appServerStorageAccountsType')]"
      },
      "copy": {
        "name": "appServerStorageAccountsCopy",
        "count": "[length(parameters('serverTypes'))]"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex()))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "batchServerNICs"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "FEAdapter",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('appServerNICsSubnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "batchServerNICsCopy",
        "count": "[parameters('batchServerCount')]"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'calc', copyIndex()))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "calcServerNICs"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "FEAdapter",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('appServerNICsSubnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "calcServerNICsCopy",
        "count": "[parameters('calcServerCount')]"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'lgcalc', copyIndex()))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "lgCalcServerNICs"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "FEAdapter",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('appServerNICsSubnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "lgCalcServerNICsCopy",
        "count": "[parameters('lgCalcServerCount')]"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'common', copyIndex()))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "commonServerNICs"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "FEAdapter",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('appServerNICsSubnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "commonServerNICsCopy",
        "count": "[parameters('commonServerCount')]"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'download', copyIndex()))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "downloadServerNICs"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "FEAdapter",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('appServerNICsSubnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "downloadServerNICsCopy",
        "count": "[parameters('downloadServerCount')]"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'migr', copyIndex()))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "migrServerNICs"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "FEAdapter",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('appServerNICsSubnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "migrServerNICsCopy",
        "count": "[parameters('migrationServerCount')]"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'portal', copyIndex()))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "portalServerNICs"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "FEAdapter",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('appServerNICsSubnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "portalServerNICsCopy",
        "count": "[parameters('portalServerCount')]"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'ras', copyIndex()))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "rasServerNICs"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "FEAdapter",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('appServerNICsSubnetRef')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "rasServerNICsCopy",
        "count": "[parameters('rasServerCount')]"
      }
    },
    {
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex()))]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', toLower(concat(parameters('appServerHostNamePrefix'), 'batch')))]",
        "[concat('Microsoft.Network/networkInterfaces/', toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex())))]",
        "[concat('Microsoft.Compute/availabilitySets/', toLower(concat(parameters('appServerHostNamePrefix'), 'batch')))]"
      ],
      "tags": {
        "displayName": "batchVMs"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('batchVMsVmSize')]"
        },
        "osProfile": {
          "computerName": "[toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex()))]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('VMsWindowsOSVersion')]",
            "version": "latest"
          },
          "dataDisks": [
            {
              "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex(), '-DATA'))]",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', toLower(concat(parameters('appServerHostNamePrefix'), 'batch')), '.blob.core.windows.net/vhds/', toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex(), '-DATA')), '.vhd')]"
              },
              "createOption": "Empty"
            }
          ],
          "osDisk": {
            "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex(), '-OS'))]",
            "vhd": {
              "uri": "[concat('http://', toLower(concat(parameters('appServerHostNamePrefix'), 'batch')), '.blob.core.windows.net/vhds/', toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex(), '-OS')), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex())))]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',toLower(concat(parameters('appServerHostNamePrefix'), 'batch')))]"
        }
      },
      "copy": {
        "name": "batchVMsCopy",
        "count": "[parameters('batchServerCount')]"
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex(), '/CustomScriptExtension'))]",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex())))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.2",
            "settings": {
              "fileUris": "https://github.com/ChaseManhatton/AXPOC_Template/blob/master/Scripts/",
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ','InitDataDrive.ps1')]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex(), '/JoinDomainExt'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', toLower(concat(parameters('appServerHostNamePrefix'), 'batch', copyIndex(), '/extensions/customscriptextension')))]"
      ],
      "properties": {
        "protectedsettings": {
          "Password": "[parameters('domainPassword')]"
        },
        "publisher": "Microsoft.Compute",
        "settings": {
          "Name": "[parameters('domainToJoin')]",
          "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
          "Restart": "true",
          "Options": "[parameters('domainJoinOptions')]"
        },
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.0"
      },
      "copy": {
        "name": "batchVMsJoinDomainExtCopy",
        "count": "[parameters('batchServerCount')]"
      }
    }
  ],
  "outputs": {
  }
}
